{"version":3,"sources":["Task.jsx","Process.jsx","Workspace.jsx","App.js","reportWebVitals.js","index.js"],"names":["Task","title","id","selected","isLast","onClick","onAddClick","onRemoveClick","onAddDecisionClick","style","className","width","height","ev","DecisionSplit","decisionTasks","marginLeft","map","task","indx","marginTop","undefined","Process","tasks","onTaskSelected","onTaskAdd","onTaskRemove","onProcessSelected","onProcessRemove","onAddProcess","display","justifyContent","target","includes","idx","type","Object","keys","outcomes","key","taskId","length","definition","Workspace","useState","state","setState","handleTaskSelected","processId","process","find","x","processIndex","indexOf","taskIndx","tasksCopy","processes","handleProcessSelected","handleProcessRemove","filter","p","handleAddProcess","push","Math","random","toString","substring","handleTaskAdd","t","handleTaskRemove","console","log","App","flexDirection","position","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAmDeA,G,KAhDF,SAAC,GAUP,IATLC,EASI,EATJA,MACAC,EAQI,EARJA,GACAC,EAOI,EAPJA,SACAC,EAMI,EANJA,OACAC,EAKI,EALJA,QACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,MAMA,OACE,qBAAKA,MAAOA,EAAOC,UAAS,eAAUP,EAAW,cAAgB,IAAjE,SACE,sBAAKO,UAAU,cAAf,UACE,qBACED,MAAO,CAAEE,MAAO,OAAQC,OAAQ,QAChCP,QATgB,SAACQ,GACvBR,EAAQH,IAMJ,SAIE,sBAAMQ,UAAU,YAAhB,SAA6BT,MAE9BE,GACC,qBAAKO,UAAU,iBAAiBL,QAAS,kBAAME,EAAcL,IAA7D,eAIDC,GAAYC,GACX,sBAAKM,UAAU,sBAAf,UACE,qBACEA,UAAU,cACVT,MAAM,gBACNI,QAAS,kBAAMC,EAAWJ,MAE5B,qBACEQ,UAAU,cACVT,MAAM,cACNI,QAAS,kBAAMG,EAAmBN,gBC+C1CY,G,KAAgB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACvB,OACE,qBAAKN,MAAO,CAAEO,WAAY,IAA1B,gBACGD,QADH,IACGA,OADH,EACGA,EAAeE,KAAI,SAACC,EAAMC,GACzB,OACE,cAAC,EAAD,CAEEjB,GAAIgB,EAAKhB,GACTD,MAAOiB,EAAKjB,MACZQ,MAAOU,EAAO,EAAI,CAAEC,UAAW,SAAOC,GAHjCH,EAAKhB,WAWPoB,EAtGC,SAAC,GAYV,IAXLpB,EAWI,EAXJA,GACAD,EAUI,EAVJA,MACAsB,EASI,EATJA,MACAnB,EAQI,EARJA,OACAD,EAOI,EAPJA,SACAqB,EAMI,EANJA,eACAC,EAKI,EALJA,UACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,kBACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,aASA,OACE,qBACEpB,MAAO,CACLqB,QAAS,OACTC,eAAgB,UAHpB,SAME,sBACE1B,QAfkB,SAACQ,GAClBA,EAAGmB,OAAOtB,UAAUuB,SAAS,YAGlCN,EAAkBzB,IAYdQ,UAAS,4CACPP,EAAW,cAAgB,IAH/B,UAME,sBAAMO,UAAU,eAAhB,SAAgCT,IAC/BsB,EAAMN,KAAI,SAACC,EAAMgB,GAChB,GAAkB,aAAdhB,EAAKiB,KAAqB,CAC5B,IAAMpB,EAAgBqB,OAAOC,KAAKnB,EAAKoB,UAAUrB,KAC/C,SAACsB,GAAD,OAASrB,EAAKoB,SAASC,MAGzB,OAAO,cAAC,EAAD,CAAexB,cAAa,OAAEA,QAAF,IAAEA,IAAiB,KAExD,OACE,qCACGmB,EAAM,GAAK,sBAAMzB,MAAO,CAAEO,WAAY,GAA3B,SAAiC,aAC7C,cAAC,EAAD,CAEEd,GAAIgB,EAAKhB,GACTD,MAAOiB,EAAKjB,MACZI,QAAS,SAACmC,GAAD,OAAYhB,EAAetB,EAAIsC,IACxCjC,cAAe,SAACiC,GAAD,OAAYd,EAAaxB,EAAIsC,IAC5ClC,WAAY,SAACkC,GAAD,OAAYf,EAAUvB,EAAIsC,IACtCrC,SAAUe,EAAKf,SACfC,OAAQ8B,IAAQX,EAAMkB,OAAS,GAP1BvB,EAAKhB,IASXC,GACC,qBACEO,UAAU,iBACVL,QAAS,kBAAMuB,EAAgB1B,IAFjC,eAODC,GAAYC,GACX,sBAAKM,UAAU,sBAAf,UACE,qBACEA,UAAU,cACVT,MAAM,gBACNI,QAAS,kBAAMwB,EAAa3B,MAE9B,qBACEQ,UAAU,cACVT,MAAM,+BCvEpByC,EAAa,CACjB,CACExC,GAAI,WACJD,MAAO,uBACPE,UAAU,EACVoB,MAAO,CACL,CACErB,GAAI,mBACJD,MAAO,mBACPE,UAAU,GAEZ,CACED,GAAI,kBACJD,MAAO,kBACPE,UAAU,KAIhB,CACED,GAAI,WACJD,MAAO,WACPE,UAAU,EACVoB,MAAO,CACL,CACErB,GAAI,4BACJD,MAAO,4BACPE,UAAU,GAEZ,CACED,GAAI,2BACJD,MAAO,2BACPE,UAAU,MA6IHwC,EAvIG,SAAC,GAAe,IAAb1C,EAAY,EAAZA,MAAY,EACL2C,mBAASF,GADJ,mBACxBG,EADwB,KACjBC,EADiB,KAGzBC,EAAqB,SAACC,EAAWR,GACrC,IAAMS,EAAUJ,EAAMK,MAAK,SAACC,GAAD,OAAOA,EAAEjD,KAAO8C,KACrCI,EAAeP,EAAMQ,QAAQJ,GAE7B/B,EAAO+B,EAAQ1B,MAAM2B,MAAK,SAACC,GAAD,OAAOA,EAAEjD,KAAOsC,KAC1Cc,EAAWL,EAAQ1B,MAAM8B,QAAQnC,GAEjCqC,EAAS,YAAON,EAAQ1B,OAC9BgC,EAAUD,GAAV,2BACKpC,GADL,IAEEf,UAAWe,EAAKf,WAGlB,IAAMqD,EAAS,YAAOX,GACtBW,EAAUJ,GAAV,2BACKH,GADL,IAEE1B,MAAOgC,IAGTT,EAASU,IAGLC,EAAwB,SAACT,GAC7B,IAAMC,EAAUJ,EAAMK,MAAK,SAACC,GAAD,OAAOA,EAAEjD,KAAO8C,KACrCI,EAAeP,EAAMQ,QAAQJ,GAC7BO,EAAS,YAAOX,GACtBW,EAAUJ,GAAV,2BACKH,GADL,IAEE9C,UAAWqD,EAAUJ,GAAcjD,WAErC2C,EAASU,IAGLE,EAAsB,SAACV,GAC3BF,EAASD,EAAMc,QAAO,SAACC,GAAD,OAAOA,EAAE1D,KAAO8C,OAGlCa,EAAmB,SAACb,GACxB,IAAMQ,EAAYX,EAAM5B,KAAI,SAACkC,GAC3B,OAAO,2BACFA,GADL,IAEEhD,UAAU,OAGdqD,EAAUM,KAAK,CACb5D,GAAI6D,KAAKC,SAASC,SAAS,IAAIC,UAAU,GACzCjE,MAAO,YACPE,UAAU,EACVoB,MAAO,CACL,CAAErB,GAAI6D,KAAKC,SAASC,SAAS,IAAIC,UAAU,GAAIjE,MAAO,gBAG1D6C,EAASU,IAGLW,EAAgB,SAACnB,EAAWR,GAChC,IAAMS,EAAUJ,EAAMK,MAAK,SAACC,GAAD,OAAOA,EAAEjD,KAAO8C,KACrCI,EAAeP,EAAMQ,QAAQJ,GAE7BM,EAAYN,EAAQ1B,MAAMN,KAAI,SAACmD,GACnC,OAAO,2BACFA,GADL,IAEEjE,UAAU,OAIdoD,EAAUO,KAAK,CACb5D,GAAI6D,KAAKC,SAASC,SAAS,IAAIC,UAAU,GACzCjE,MAAO,YACPE,UAAU,IAGZ,IAAMqD,EAAS,YAAOX,GACtBW,EAAUJ,GAAV,2BACKH,GADL,IAEE1B,MAAOgC,IAETT,EAASU,IAGLa,EAAmB,SAACrB,EAAWR,GACnC,IAAMS,EAAUJ,EAAMK,MAAK,SAACC,GAAD,OAAOA,EAAEjD,KAAO8C,KACrCI,EAAeP,EAAMQ,QAAQJ,GAC7B1B,EAAQ0B,EAAQ1B,MAAMoC,QAAO,SAACR,GAAD,OAAOA,EAAEjD,KAAOsC,KAC7CgB,EAAS,YAAOX,GACtBW,EAAUJ,GAAV,2BACKH,GADL,IAEE1B,MAAOA,IAGTuB,EAASU,IAKX,OAFAc,QAAQC,IAAI1B,GAGV,qBAAKpC,MAAO,CAAEE,MAAO,OAAQC,OAAQ,OAAQQ,UAAW,IAAxD,SACE,qBACEX,MAAO,CACLqB,QAAS,OACTC,eAAgB,UAHpB,SAME,sBAAKrB,UAAU,kBAAf,UACE,sBAAMA,UAAU,eAAhB,SAAgCT,IAC/B4C,EAAM5B,KAAI,SAACgC,EAASf,GACnB,OACE,qCACGA,EAAM,GAAK,sBAAMzB,MAAO,CAAEO,WAAY,GAA3B,SAAiC,aAC7C,cAAC,EAAD,CAEEd,GAAI+C,EAAQ/C,GACZD,MAAOgD,EAAQhD,MACfE,SAAU8C,EAAQ9C,SAClBoB,MAAO0B,EAAQ1B,MACfnB,OAAQ8B,IAAQW,EAAMJ,OAAS,EAC/BjB,eAAgBuB,EAChBtB,UAAW0C,EACXzC,aAAc2C,EACd1C,kBAAmB8B,EACnB7B,gBAAiB8B,EACjB7B,aAAcgC,GAXTZ,EAAQ/C,kB,QC/HhBsE,MAxBf,WACE,OACE,cAAC,UAAD,UACE,sBACE/D,MAAO,CACLqB,QAAS,OACT2C,cAAe,SACf7D,OAAQ,SAJZ,UAOE,qBAAKH,MAAO,CAAEiE,SAAU,YAAxB,SACE,cAAC,EAAD,CAAWzE,MAAO,kBAEpB,qBAAKQ,MAAO,CAAEiE,SAAU,WAAYtD,UAAW,IAA/C,SACE,cAAC,EAAD,CAAWnB,MAAO,mBAEpB,qBAAKQ,MAAO,CAAEiE,SAAU,WAAYtD,UAAW,IAA/C,SACE,cAAC,EAAD,CAAWnB,MAAO,wBCTb0E,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.0c10852d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Task.css\";\r\n\r\nconst Task = ({\r\n  title,\r\n  id,\r\n  selected,\r\n  isLast,\r\n  onClick,\r\n  onAddClick,\r\n  onRemoveClick,\r\n  onAddDecisionClick,\r\n  style,\r\n}) => {\r\n  const handleThisClick = (ev) => {\r\n    onClick(id);\r\n  };\r\n\r\n  return (\r\n    <div style={style} className={`task ${selected ? \"task-active\" : \"\"}`}>\r\n      <div className=\"task-inside\">\r\n        <div\r\n          style={{ width: \"100%\", height: \"100%\" }}\r\n          onClick={handleThisClick}\r\n        >\r\n          <span className=\"task-text\">{title}</span>\r\n        </div>\r\n        {selected && (\r\n          <div className=\"remove-wrapper\" onClick={() => onRemoveClick(id)}>\r\n            X\r\n          </div>\r\n        )}\r\n        {selected && isLast && (\r\n          <div className=\"right-arrow-wrapper\">\r\n            <div\r\n              className=\"arrow-right\"\r\n              title=\"Add next task\"\r\n              onClick={() => onAddClick(id)}\r\n            />\r\n            <div\r\n              className=\"arrow-right\"\r\n              title=\"Add gateway\"\r\n              onClick={() => onAddDecisionClick(id)}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport Task from \"./Task\";\r\nimport \"./Process.css\";\r\n\r\nconst Process = ({\r\n  id,\r\n  title,\r\n  tasks,\r\n  isLast,\r\n  selected,\r\n  onTaskSelected,\r\n  onTaskAdd,\r\n  onTaskRemove,\r\n  onProcessSelected,\r\n  onProcessRemove,\r\n  onAddProcess,\r\n}) => {\r\n  const handleThisClick = (ev) => {\r\n    if (!ev.target.className.includes(\"process\")) {\r\n      return;\r\n    }\r\n    onProcessSelected(id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <div\r\n        onClick={handleThisClick}\r\n        className={`process task-inside tasks-wrapper ${\r\n          selected ? \"task-active\" : \"\"\r\n        }`}\r\n      >\r\n        <span className=\"process-text\">{title}</span>\r\n        {tasks.map((task, idx) => {\r\n          if (task.type === \"decision\") {\r\n            const decisionTasks = Object.keys(task.outcomes).map(\r\n              (key) => task.outcomes[key]\r\n            );\r\n\r\n            return <DecisionSplit decisionTasks={decisionTasks ?? []} />;\r\n          }\r\n          return (\r\n            <>\r\n              {idx > 0 && <span style={{ marginLeft: 5 }}>{\"---->\"}</span>}\r\n              <Task\r\n                key={task.id}\r\n                id={task.id}\r\n                title={task.title}\r\n                onClick={(taskId) => onTaskSelected(id, taskId)}\r\n                onRemoveClick={(taskId) => onTaskRemove(id, taskId)}\r\n                onAddClick={(taskId) => onTaskAdd(id, taskId)}\r\n                selected={task.selected}\r\n                isLast={idx === tasks.length - 1}\r\n              />\r\n              {selected && (\r\n                <div\r\n                  className=\"remove-wrapper\"\r\n                  onClick={() => onProcessRemove(id)}\r\n                >\r\n                  X\r\n                </div>\r\n              )}\r\n              {selected && isLast && (\r\n                <div className=\"right-arrow-wrapper\">\r\n                  <div\r\n                    className=\"arrow-right\"\r\n                    title=\"Add next task\"\r\n                    onClick={() => onAddProcess(id)}\r\n                  />\r\n                  <div\r\n                    className=\"arrow-right\"\r\n                    title=\"Add gateway\"\r\n                    //onClick={() => onAddDecisionClick(id)}\r\n                  />\r\n                </div>\r\n              )}\r\n            </>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DecisionSplit = ({ decisionTasks }) => {\r\n  return (\r\n    <div style={{ marginLeft: 35 }}>\r\n      {decisionTasks?.map((task, indx) => {\r\n        return (\r\n          <Task\r\n            key={task.id}\r\n            id={task.id}\r\n            title={task.title}\r\n            style={indx > 0 ? { marginTop: 20 } : undefined}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Process;\r\n","import React, { useState } from \"react\";\r\nimport Process from \"./Process\";\r\nimport \"./Process.css\";\r\nimport \"./Task.css\";\r\n\r\nconst definition = [\r\n  {\r\n    id: \"process1\",\r\n    title: \"Capture Initial Data\",\r\n    selected: false,\r\n    tasks: [\r\n      {\r\n        id: \"Capture KYC Data\",\r\n        title: \"Capture KYC Data\",\r\n        selected: false,\r\n      },\r\n      {\r\n        id: \"Risk Assessment\",\r\n        title: \"Risk Assessment\",\r\n        selected: false,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: \"process2\",\r\n    title: \"process2\",\r\n    selected: false,\r\n    tasks: [\r\n      {\r\n        id: \"process2 Capture KYC Data\",\r\n        title: \"process2 Capture KYC Data\",\r\n        selected: false,\r\n      },\r\n      {\r\n        id: \"process2R isk Assessment\",\r\n        title: \"process2 Risk Assessment\",\r\n        selected: false,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst Workspace = ({ title }) => {\r\n  const [state, setState] = useState(definition);\r\n\r\n  const handleTaskSelected = (processId, taskId) => {\r\n    const process = state.find((x) => x.id === processId);\r\n    const processIndex = state.indexOf(process);\r\n\r\n    const task = process.tasks.find((x) => x.id === taskId);\r\n    const taskIndx = process.tasks.indexOf(task);\r\n\r\n    const tasksCopy = [...process.tasks];\r\n    tasksCopy[taskIndx] = {\r\n      ...task,\r\n      selected: !task.selected,\r\n    };\r\n\r\n    const processes = [...state];\r\n    processes[processIndex] = {\r\n      ...process,\r\n      tasks: tasksCopy,\r\n    };\r\n\r\n    setState(processes);\r\n  };\r\n\r\n  const handleProcessSelected = (processId) => {\r\n    const process = state.find((x) => x.id === processId);\r\n    const processIndex = state.indexOf(process);\r\n    const processes = [...state];\r\n    processes[processIndex] = {\r\n      ...process,\r\n      selected: !processes[processIndex].selected,\r\n    };\r\n    setState(processes);\r\n  };\r\n\r\n  const handleProcessRemove = (processId) => {\r\n    setState(state.filter((p) => p.id !== processId));\r\n  };\r\n\r\n  const handleAddProcess = (processId) => {\r\n    const processes = state.map((x) => {\r\n      return {\r\n        ...x,\r\n        selected: false,\r\n      };\r\n    });\r\n    processes.push({\r\n      id: Math.random().toString(36).substring(7),\r\n      title: \"Change me\",\r\n      selected: false,\r\n      tasks: [\r\n        { id: Math.random().toString(36).substring(7), title: \"Change me\" },\r\n      ],\r\n    });\r\n    setState(processes);\r\n  };\r\n\r\n  const handleTaskAdd = (processId, taskId) => {\r\n    const process = state.find((x) => x.id === processId);\r\n    const processIndex = state.indexOf(process);\r\n\r\n    const tasksCopy = process.tasks.map((t) => {\r\n      return {\r\n        ...t,\r\n        selected: false,\r\n      };\r\n    });\r\n\r\n    tasksCopy.push({\r\n      id: Math.random().toString(36).substring(7),\r\n      title: \"Change me\",\r\n      selected: false,\r\n    });\r\n\r\n    const processes = [...state];\r\n    processes[processIndex] = {\r\n      ...process,\r\n      tasks: tasksCopy,\r\n    };\r\n    setState(processes);\r\n  };\r\n\r\n  const handleTaskRemove = (processId, taskId) => {\r\n    const process = state.find((x) => x.id === processId);\r\n    const processIndex = state.indexOf(process);\r\n    const tasks = process.tasks.filter((x) => x.id !== taskId);\r\n    const processes = [...state];\r\n    processes[processIndex] = {\r\n      ...process,\r\n      tasks: tasks,\r\n    };\r\n\r\n    setState(processes);\r\n  };\r\n\r\n  console.log(state);\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", height: \"100%\", marginTop: 50 }}>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <div className=\"process-wrapper\">\r\n          <span className=\"process-text\">{title}</span>\r\n          {state.map((process, idx) => {\r\n            return (\r\n              <>\r\n                {idx > 0 && <span style={{ marginLeft: 5 }}>{\"---->\"}</span>}\r\n                <Process\r\n                  key={process.id}\r\n                  id={process.id}\r\n                  title={process.title}\r\n                  selected={process.selected}\r\n                  tasks={process.tasks}\r\n                  isLast={idx === state.length - 1}\r\n                  onTaskSelected={handleTaskSelected}\r\n                  onTaskAdd={handleTaskAdd}\r\n                  onTaskRemove={handleTaskRemove}\r\n                  onProcessSelected={handleProcessSelected}\r\n                  onProcessRemove={handleProcessRemove}\r\n                  onAddProcess={handleAddProcess}\r\n                />\r\n              </>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Workspace;\r\n","import \"./App.css\";\r\nimport Workspace from \"./Workspace\";\r\nimport { PanZoom } from \"react-easy-panzoom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <PanZoom>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          height: \"100vh\",\r\n        }}\r\n      >\r\n        <div style={{ position: \"relative\" }}>\r\n          <Workspace title={\"First stage\"} />\r\n        </div>\r\n        <div style={{ position: \"relative\", marginTop: 50 }}>\r\n          <Workspace title={\"Second stage\"} />\r\n        </div>\r\n        <div style={{ position: \"relative\", marginTop: 50 }}>\r\n          <Workspace title={\"Third stage\"} />\r\n        </div>\r\n      </div>\r\n    </PanZoom>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}