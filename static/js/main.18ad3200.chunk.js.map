{"version":3,"sources":["v1/Task.jsx","v1/Process.jsx","v1/Workspace.jsx","useKeyPress.js","v1/App.js","reportWebVitals.js","v2/Task/index.js","v2/Task/Task.js","v2/Process/TaskArrow.js","v2/Process/Process.js","v2/Process/index.js","v2/Workspace.js","index.js"],"names":["Task","title","id","active","isLast","onClick","onAddClick","onRemoveClick","style","onAddDecisionClick","className","width","height","ev","Process","tasks","onTaskSelected","onTaskAdd","onTaskRemove","onProcessSelected","onProcessRemove","onAddProcess","sortTasks","display","justifyContent","target","includes","list","setList","newState","sortable","store","map","task","idx","marginLeft","taskId","length","definition","type","outcomes","x","y","Workspace","useState","state","setState","handleTaskSelected","processId","process","find","processIndex","indexOf","taskIndx","tasksCopy","processes","handleProcessSelected","handleProcessRemove","filter","p","handleAddProcess","push","Math","random","toString","substring","handleTaskAdd","t","handleTaskRemove","handleSortTasks","console","log","marginTop","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","key","upHandler","useEffect","window","addEventListener","removeEventListener","App","shiftPress","preventPan","flexDirection","position","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","setActive","TaskArrow","textAlign","paddingLeft","paddingRight","alignContent","viewBox","transform","y2","x1","x2","stroke","strokeMiterlimit","y1","strokeWidth","points","TaskArrowPair","skipArrow","handle","ghostClass","items","indx","disableDoubleClickZoom","Root","version","setVersion","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18ad3200.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Task.css\";\r\n\r\nconst Task = ({\r\n  title,\r\n  id,\r\n  active,\r\n  isLast,\r\n  onClick,\r\n  onAddClick,\r\n  onRemoveClick,\r\n  onAddDecisionClick,\r\n  style,\r\n}) => {\r\n  const handleThisClick = (ev) => {\r\n    onClick(id);\r\n  };\r\n\r\n  return (\r\n    <div style={style} className={`task ${active ? \"task-active\" : \"\"}`}>\r\n      <div className=\"task-inside\">\r\n        <div\r\n          style={{ width: \"100%\", height: \"100%\" }}\r\n          onClick={handleThisClick}\r\n        >\r\n          <span className=\"task-text\">{title}</span>\r\n        </div>\r\n        {/* {active && (\r\n          <div className=\"handle-wrapper\" onClick={() => onRemoveClick(id)}>\r\n            <i className=\"fas fa-expand-arrows-alt la-lg\" />\r\n          </div>\r\n        )} */}\r\n        {active && (\r\n          <div className=\"remove-wrapper\" onClick={() => onRemoveClick(id)}>\r\n            <i className=\"fas fa-trash la-lg\" />\r\n          </div>\r\n        )}\r\n        {active && isLast && (\r\n          <div className=\"right-icons-wrapper\">\r\n            <div title=\"Add next task\" onClick={() => onAddClick(id)}>\r\n              <i className=\"fas fa-arrow-circle-right fa-2x\" />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport Task from \"./Task\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport \"./Process.css\";\r\n\r\nconst Process = ({\r\n  id,\r\n  title,\r\n  tasks,\r\n  isLast,\r\n  active,\r\n  onTaskSelected,\r\n  onTaskAdd,\r\n  onTaskRemove,\r\n  onProcessSelected,\r\n  onProcessRemove,\r\n  onAddProcess,\r\n  sortTasks,\r\n}) => {\r\n  const handleThisClick = (ev) => {\r\n    if (!ev.target.className.includes(\"process\")) {\r\n      return;\r\n    }\r\n    onProcessSelected(id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <div\r\n        onClick={handleThisClick}\r\n        className={`process task-inside tasks-wrapper ${\r\n          active ? \"task-active\" : \"\"\r\n        }`}\r\n      >\r\n        <span className=\"process-text\">{title}</span>\r\n\r\n        <ReactSortable\r\n          style={{ display: \"flex\", justifyContent: \"center\" }}\r\n          list={tasks}\r\n          //handle=\".handle-wrapper\"\r\n          setList={(newState, sortable, store) =>\r\n            sortTasks(id, newState, sortable, store)\r\n          }\r\n        >\r\n          {tasks.map((task, idx) => {\r\n            // if (task.type === \"decision\") {\r\n            //   const decisionTasks = Object.keys(task.outcomes).map(\r\n            //     (key) => task.outcomes[key]\r\n            //   );\r\n\r\n            //   return <DecisionSplit decisionTasks={decisionTasks ?? []} />;\r\n            // }\r\n            return (\r\n              <>\r\n                {idx > 0 && <span style={{ marginLeft: 5 }}>{\"---->\"}</span>}\r\n                <Task\r\n                  key={task.id}\r\n                  id={task.id}\r\n                  title={task.title}\r\n                  onClick={(taskId) => onTaskSelected(id, taskId)}\r\n                  onRemoveClick={(taskId) => onTaskRemove(id, taskId)}\r\n                  onAddClick={(taskId) => onTaskAdd(id, taskId)}\r\n                  active={task.active}\r\n                  isLast={idx === tasks.length - 1}\r\n                />\r\n              </>\r\n            );\r\n          })}\r\n        </ReactSortable>\r\n        {active && (\r\n          <div className=\"remove-wrapper\" onClick={() => onProcessRemove(id)}>\r\n            <i className=\"fas fa-trash la-lg\" />\r\n          </div>\r\n        )}\r\n        {active && isLast && (\r\n          <div className=\"right-icons-wrapper-process\">\r\n            <div title=\"Add next task\" onClick={() => onAddProcess(id)}>\r\n              <i className=\"fas fa-arrow-circle-right fa-3x\" />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DecisionSplit = ({ decisionTasks }) => {\r\n  return (\r\n    <div style={{ marginLeft: 35 }}>\r\n      {decisionTasks?.map((task, indx) => {\r\n        return (\r\n          <Task\r\n            key={task.id}\r\n            id={task.id}\r\n            title={task.title}\r\n            style={indx > 0 ? { marginTop: 20 } : undefined}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Process;\r\n","import React, { useState } from \"react\";\r\nimport Process from \"./Process\";\r\nimport \"./Process.css\";\r\nimport \"./Task.css\";\r\n\r\nconst definition = [\r\n  {\r\n    id: \"process1\",\r\n    title: \"Capture Initial Data\",\r\n    active: false,\r\n    tasks: [\r\n      {\r\n        id: \"Capture KYC\",\r\n        title: \"Capture KYC\",\r\n        active: false,\r\n      },\r\n      {\r\n        id: \"Approve Risk\",\r\n        title: \"Approve Risk\",\r\n        active: false,\r\n      },\r\n      {\r\n        id: \"Some Decision\",\r\n        title: \"Some Decision\",\r\n        active: false,\r\n        type: \"decision\",\r\n        outcomes: {\r\n          x: {\r\n            id: \"Outcome 1\",\r\n            title: \"Outcome 1\",\r\n            active: false,\r\n          },\r\n          y: {\r\n            id: \"Outcome 2\",\r\n            title: \"Outcome 2\",\r\n            active: false,\r\n          },\r\n          // z: {\r\n          //   id: \"Outcome 3\",\r\n          //   title: \"Outcome 3\",\r\n          //   active: false,\r\n          // },\r\n        },\r\n      },\r\n      {\r\n        id: \"Verify Entity\",\r\n        title: \"Verify Entity\",\r\n        active: false,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: \"process2\",\r\n    title: \"process2\",\r\n    active: false,\r\n    tasks: [\r\n      {\r\n        id: \"process2 Capture KYC\",\r\n        title: \"Capture KYC\",\r\n        active: false,\r\n      },\r\n      {\r\n        id: \"Risk Assessment\",\r\n        title: \"Risk Assessment\",\r\n        active: false,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst Workspace = ({ title }) => {\r\n  const [state, setState] = useState(definition);\r\n\r\n  const handleTaskSelected = (processId, taskId) => {\r\n    const process = state.find((x) => x.id === processId);\r\n    const processIndex = state.indexOf(process);\r\n\r\n    const task = process.tasks.find((x) => x.id === taskId);\r\n    const taskIndx = process.tasks.indexOf(task);\r\n\r\n    const tasksCopy = [...process.tasks];\r\n    tasksCopy[taskIndx] = {\r\n      ...task,\r\n      active: !task.active,\r\n    };\r\n\r\n    const processes = [...state];\r\n    processes[processIndex] = {\r\n      ...process,\r\n      tasks: tasksCopy,\r\n    };\r\n\r\n    setState(processes);\r\n  };\r\n\r\n  const handleProcessSelected = (processId) => {\r\n    const process = state.find((x) => x.id === processId);\r\n    const processIndex = state.indexOf(process);\r\n    const processes = [...state];\r\n    processes[processIndex] = {\r\n      ...process,\r\n      active: !processes[processIndex].active,\r\n    };\r\n    setState(processes);\r\n  };\r\n\r\n  const handleProcessRemove = (processId) => {\r\n    setState(state.filter((p) => p.id !== processId));\r\n  };\r\n\r\n  const handleAddProcess = (processId) => {\r\n    const processes = state.map((x) => {\r\n      return {\r\n        ...x,\r\n        active: false,\r\n      };\r\n    });\r\n    processes.push({\r\n      id: Math.random().toString(36).substring(7),\r\n      title: \"Change me\",\r\n      active: false,\r\n      tasks: [\r\n        { id: Math.random().toString(36).substring(7), title: \"Change me\" },\r\n      ],\r\n    });\r\n    setState(processes);\r\n  };\r\n\r\n  const handleTaskAdd = (processId, taskId) => {\r\n    const process = state.find((x) => x.id === processId);\r\n    const processIndex = state.indexOf(process);\r\n\r\n    const tasksCopy = process.tasks.map((t) => {\r\n      return {\r\n        ...t,\r\n        active: false,\r\n      };\r\n    });\r\n\r\n    tasksCopy.push({\r\n      id: Math.random().toString(36).substring(7),\r\n      title: \"Change me\",\r\n      active: false,\r\n    });\r\n\r\n    const processes = [...state];\r\n    processes[processIndex] = {\r\n      ...process,\r\n      tasks: tasksCopy,\r\n    };\r\n    setState(processes);\r\n  };\r\n\r\n  const handleTaskRemove = (processId, taskId) => {\r\n    const process = state.find((x) => x.id === processId);\r\n    const processIndex = state.indexOf(process);\r\n    const tasks = process.tasks.filter((x) => x.id !== taskId);\r\n    const processes = [...state];\r\n    processes[processIndex] = {\r\n      ...process,\r\n      tasks: tasks,\r\n    };\r\n\r\n    setState(processes);\r\n  };\r\n\r\n  const handleSortTasks = (processId, newState, sortable, store) => {\r\n    console.log(newState);\r\n    const process = state.find((x) => x.id === processId);\r\n    const processIndex = state.indexOf(process);\r\n    const processes = [...state];\r\n    processes[processIndex] = {\r\n      ...process,\r\n      tasks: newState.filter((x) => x),\r\n    };\r\n    setState(processes);\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", height: \"100%\", marginTop: 50 }}>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <div className=\"process-wrapper\">\r\n          <span className=\"process-text\">{title}</span>\r\n          {state.map((process, idx) => {\r\n            return (\r\n              <>\r\n                {idx > 0 && <span style={{ marginLeft: 5 }}>{\"---->\"}</span>}\r\n                <Process\r\n                  key={process.id}\r\n                  id={process.id}\r\n                  title={process.title}\r\n                  active={process.active}\r\n                  tasks={process.tasks}\r\n                  isLast={idx === state.length - 1}\r\n                  onTaskSelected={handleTaskSelected}\r\n                  onTaskAdd={handleTaskAdd}\r\n                  onTaskRemove={handleTaskRemove}\r\n                  onProcessSelected={handleProcessSelected}\r\n                  onProcessRemove={handleProcessRemove}\r\n                  onAddProcess={handleAddProcess}\r\n                  sortTasks={handleSortTasks}\r\n                />\r\n              </>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Workspace;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport function useKeyPress(targetKey) {\r\n  // State for keeping track of whether key is pressed\r\n  const [keyPressed, setKeyPressed] = useState(false);\r\n\r\n  // If pressed key is our target key then set to true\r\n  function downHandler({ key }) {\r\n    if (key === targetKey) {\r\n      setKeyPressed(true);\r\n    }\r\n  }\r\n\r\n  // If released key is our target key then set to false\r\n  const upHandler = ({ key }) => {\r\n    if (key === targetKey) {\r\n      setKeyPressed(false);\r\n    }\r\n  };\r\n\r\n  // Add event listeners\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", downHandler);\r\n    window.addEventListener(\"keyup\", upHandler);\r\n    // Remove event listeners on cleanup\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", downHandler);\r\n      window.removeEventListener(\"keyup\", upHandler);\r\n    };\r\n  }, []); // Empty array ensures that effect is only run on mount and unmount\r\n\r\n  return keyPressed;\r\n}\r\n","import React from \"react\";\r\nimport Workspace from \"./Workspace\";\r\nimport { PanZoom } from \"react-easy-panzoom\";\r\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\r\nimport { useKeyPress } from \"../useKeyPress\";\r\n\r\nfunction App() {\r\n  const shiftPress = useKeyPress(\"Shift\");\r\n\r\n  return (\r\n    <>\r\n      <PanZoom preventPan={() => !shiftPress}>\r\n        {/* <TransformWrapper\r\n        style={{ width: \"100%\" }}\r\n        wheel={{ wheelEnabled: true }}\r\n        pan={{ disabled: !shiftPress }}\r\n      >\r\n        <TransformComponent> */}\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            height: \"100vh\",\r\n          }}\r\n        >\r\n          <div style={{ position: \"relative\" }}>\r\n            <Workspace title={\"First stage\"} />\r\n          </div>\r\n          <div style={{ position: \"relative\", marginTop: 50 }}>\r\n            <Workspace title={\"Second stage\"} />\r\n          </div>\r\n          <div style={{ position: \"relative\", marginTop: 50 }}>\r\n            <Workspace title={\"Third stage\"} />\r\n          </div>\r\n        </div>\r\n        {/* </TransformComponent>\r\n     </TransformWrapper> */}\r\n      </PanZoom>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import Task from \"./Task\";\r\n\r\nexport default Task;\r\n","import React, { useState } from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst Task = ({ id, title, onRemoveClick, onAddClick }) => {\r\n  const [active, setActive] = useState(false);\r\n\r\n  return (\r\n    <div className={`f-task-root ${active && \"f-task-root-active\"}`}>\r\n      <div className=\"f-task-inner\">\r\n        <div\r\n          style={{ width: \"100%\", height: \"100%\" }}\r\n          onClick={() => setActive(!active)}\r\n        >\r\n          <i className=\"f-task-logo fas fa-user la-lg\" />\r\n          <div className=\"f-task-title\">{title}</div>\r\n        </div>\r\n        {active && (\r\n          <>\r\n            <div className=\"f-task-left-icons-wrapper\">\r\n              <div title=\"Add previous task\" onClick={() => onAddClick(id)}>\r\n                <i className=\"fas fa-arrow-circle-left fa-2x\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"f-task-top-icons-wrapper\">\r\n              <i\r\n                title=\"Reorder\"\r\n                className=\"fas fa-bacon la-lg f-task-icon-drag f-task-top-icon drag-handle\"\r\n              />\r\n              <i\r\n                title=\"Properties\"\r\n                className=\"fas fa-cog la-lg f-task-icon-space f-task-top-icon\"\r\n              />\r\n              <i\r\n                title=\"Copy\"\r\n                className=\"fas fa-cut la-lg f-task-icon-space f-task-top-icon\"\r\n              />\r\n              <i\r\n                title=\"Copy\"\r\n                className=\"fas fa-copy la-lg f-task-icon-space f-task-top-icon\"\r\n              />\r\n              <i\r\n                title=\"Remove\"\r\n                className=\"fas fa-trash la-lg f-task-top-icon\"\r\n              />\r\n            </div>\r\n            <div className=\"f-task-right-icons-wrapper\">\r\n              <div title=\"Add next task\" onClick={() => onAddClick(id)}>\r\n                <i className=\"fas fa-arrow-circle-right fa-2x\" />\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\n\r\nconst TaskArrow = () => {\r\n  return (\r\n    <div\r\n      className=\"drag-ignore\"\r\n      style={{\r\n        width: 60,\r\n        height: \"100%\",\r\n        textAlign: \"center\",\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        alignContent: \"center\",\r\n      }}\r\n    >\r\n      <svg viewBox=\"0 0 150 150\">\r\n        <g transform=\"translate(0,70)\">\r\n          <line\r\n            y2=\"24.704\"\r\n            x1=\"1.266\"\r\n            x2=\"125.3\"\r\n            stroke=\"#000000\"\r\n            strokeMiterlimit=\"10\"\r\n            y1=\"24.704\"\r\n            strokeWidth=\"6\"\r\n          />\r\n          <polygon points=\"124.4 6.284 124.4 44.606 148.35 23.69\" />\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskArrow;\r\n","import React, { useState } from \"react\";\r\nimport Task from \"../Task\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport \"./index.css\";\r\nimport TaskArrow from \"./TaskArrow\";\r\n\r\nconst tasks = [\r\n  { id: 123, title: \"Capture KYC Data\" },\r\n  { id: 123444, title: \"Risk Assessment\" },\r\n  { id: 1544, title: \"Uber Task\" },\r\n];\r\n\r\nconst TaskArrowPair = ({ id, title, skipArrow }) => {\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      {!skipArrow && <TaskArrow key={`arr_${id}`} />}\r\n      <Task key={id} id={id} title={title} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Process = () => {\r\n  const [state, setState] = useState(tasks);\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <ReactSortable\r\n        style={{ display: \"flex\", justifyContent: \"center\" }}\r\n        list={state}\r\n        filter=\".drag-ignore\"\r\n        handle=\".drag-handle\"\r\n        ghostClass=\"ghost\"\r\n        setList={(items) => setState(items.filter((x) => x))}\r\n      >\r\n        {state.map((task, indx) => (\r\n          <TaskArrowPair\r\n            key={task.id}\r\n            id={task.id}\r\n            title={task.title}\r\n            skipArrow={indx === 0}\r\n          />\r\n        ))}\r\n      </ReactSortable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Process;\r\n","import Process from \"./Process\";\r\n\r\nexport default Process;\r\n","import React from \"react\";\r\nimport { PanZoom } from \"react-easy-panzoom\";\r\nimport { useKeyPress } from \"../useKeyPress\";\r\nimport Process from \"./Process\";\r\n\r\nconst Workspace = () => {\r\n  const shiftPress = useKeyPress(\"Control\");\r\n\r\n  return (\r\n    <PanZoom disableDoubleClickZoom preventPan={() => shiftPress}>\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"100vh\",\r\n          marginTop: \"5rem\",\r\n          marginLeft: \"5rem\",\r\n        }}\r\n      >\r\n        <Process />\r\n      </div>\r\n    </PanZoom>\r\n  );\r\n};\r\n\r\nexport default Workspace;\r\n","import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Appv1 from \"./v1/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport Workspace from \"./v2/Workspace\";\r\n\r\nconst Root = () => {\r\n  const [version, setVersion] = useState(2);\r\n\r\n  if (version === null) {\r\n    return (\r\n      <>\r\n        <button onClick={() => setVersion(1)}>Version 1</button>\r\n        <button onClick={() => setVersion(2)}>Version 2</button>\r\n      </>\r\n    );\r\n  } else if (version === 1) {\r\n    return <Appv1 />;\r\n  } else if (version === 2) {\r\n    return <Workspace />;\r\n  }\r\n};\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Root />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}