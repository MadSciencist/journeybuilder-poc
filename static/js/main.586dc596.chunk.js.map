{"version":3,"sources":["v1/Task.jsx","v1/Process.jsx","v1/Workspace.jsx","useKeyPress.js","v1/App.js","reportWebVitals.js","v2/Stage/ProcessArrow.js","v2/Task/index.js","v2/Task/Task.js","v2/Process/TaskArrow.js","v2/Process/Process.js","v2/Process/index.js","v2/Stage/Stage.js","v2/StageArrow.js","v2/data.js","v2/Workspace.js","v3/Proc/TaskArrow.js","v3/Task/index.js","v3/Task/Task.js","v3/Proc/Proc.js","v3/Proc/index.js","v3/Processes/ProcessArrow.js","v3/Processes/Processes.js","v3/v3.js","index.js"],"names":["Task","title","id","active","isLast","onClick","onAddClick","onRemoveClick","style","onAddDecisionClick","className","width","height","ev","Process","tasks","onTaskSelected","onTaskAdd","onTaskRemove","onProcessSelected","onProcessRemove","onAddProcess","sortTasks","display","justifyContent","target","includes","list","setList","newState","sortable","store","map","task","idx","marginLeft","taskId","length","definition","type","outcomes","x","y","Workspace","useState","state","setState","handleTaskSelected","processId","process","find","processIndex","indexOf","taskIndx","tasksCopy","processes","handleProcessSelected","handleProcessRemove","filter","p","handleAddProcess","push","Math","random","toString","substring","handleTaskAdd","t","handleTaskRemove","handleSortTasks","console","log","marginTop","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","key","upHandler","useEffect","window","addEventListener","removeEventListener","App","shiftPress","preventPan","flexDirection","position","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ProcessArrow","paddingLeft","paddingRight","alignSelf","viewBox","transform","y2","x1","x2","stroke","strokeMiterlimit","y1","strokeWidth","points","stageId","decision","onAddtask","onTaskActive","TaskArrow","TaskArrowPair","skipArrow","rest","alignItems","outcome","marginBottom","onProcessActive","onProcessAdd","handle","ghostClass","indx","ProcessArrowPair","Stage","onActive","StageArrow","marginRight","initialStages_clean","initialStages_HasTaskLevelDecision","initialStages_HasProcessLevelDecision","randomId","dataSet","getData","stages","setStages","unselectAll","stagesCopy","stage","proc","handleStageActive","stageIndex","handleProcessActive","processesCopy","handleTaskActive","taskIndex","handleAddTask","processTasks","handleProcessAdd","disableDoubleClickZoom","index","Fragment","fill","Proc","Processes","border","padding","tabs","initialProcesses","V3","activeTab","setActiveTab","setProcesses","processesCop","Nav","tab","NavItem","NavLink","toggle","TabContent","margin","TabPane","tabId","Row","preventDefault","enableBoundingBox","boundaryRatioVertical","boundaryRatioHorizontal","autoCenter","noStateUpdate","Root","version","setVersion","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.586dc596.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Task.css\";\r\n\r\nconst Task = ({\r\n  title,\r\n  id,\r\n  active,\r\n  isLast,\r\n  onClick,\r\n  onAddClick,\r\n  onRemoveClick,\r\n  onAddDecisionClick,\r\n  style,\r\n}) => {\r\n  const handleThisClick = (ev) => {\r\n    onClick(id);\r\n  };\r\n\r\n  return (\r\n    <div style={style} className={`task ${active ? \"task-active\" : \"\"}`}>\r\n      <div className=\"task-inside\">\r\n        <div\r\n          style={{ width: \"100%\", height: \"100%\" }}\r\n          onClick={handleThisClick}\r\n        >\r\n          <span className=\"task-text\">{title}</span>\r\n        </div>\r\n        {/* {active && (\r\n          <div className=\"handle-wrapper\" onClick={() => onRemoveClick(id)}>\r\n            <i className=\"fas fa-expand-arrows-alt la-lg\" />\r\n          </div>\r\n        )} */}\r\n        {active && (\r\n          <div className=\"remove-wrapper\" onClick={() => onRemoveClick(id)}>\r\n            <i className=\"fas fa-trash la-lg\" />\r\n          </div>\r\n        )}\r\n        {active && isLast && (\r\n          <div className=\"right-icons-wrapper\">\r\n            <div title=\"Add next task\" onClick={() => onAddClick(id)}>\r\n              <i className=\"fas fa-arrow-circle-right fa-2x\" />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport Task from \"./Task\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport \"./Process.css\";\r\n\r\nconst Process = ({\r\n  id,\r\n  title,\r\n  tasks,\r\n  isLast,\r\n  active,\r\n  onTaskSelected,\r\n  onTaskAdd,\r\n  onTaskRemove,\r\n  onProcessSelected,\r\n  onProcessRemove,\r\n  onAddProcess,\r\n  sortTasks,\r\n}) => {\r\n  const handleThisClick = (ev) => {\r\n    if (!ev.target.className.includes(\"process\")) {\r\n      return;\r\n    }\r\n    onProcessSelected(id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <div\r\n        onClick={handleThisClick}\r\n        className={`process task-inside tasks-wrapper ${\r\n          active ? \"task-active\" : \"\"\r\n        }`}\r\n      >\r\n        <span className=\"process-text\">{title}</span>\r\n\r\n        <ReactSortable\r\n          style={{ display: \"flex\", justifyContent: \"center\" }}\r\n          list={tasks}\r\n          //handle=\".handle-wrapper\"\r\n          setList={(newState, sortable, store) =>\r\n            sortTasks(id, newState, sortable, store)\r\n          }\r\n        >\r\n          {tasks.map((task, idx) => {\r\n            // if (task.type === \"decision\") {\r\n            //   const decisionTasks = Object.keys(task.outcomes).map(\r\n            //     (key) => task.outcomes[key]\r\n            //   );\r\n\r\n            //   return <DecisionSplit decisionTasks={decisionTasks ?? []} />;\r\n            // }\r\n            return (\r\n              <>\r\n                {idx > 0 && <span style={{ marginLeft: 5 }}>{\"---->\"}</span>}\r\n                <Task\r\n                  key={task.id}\r\n                  id={task.id}\r\n                  title={task.title}\r\n                  onClick={(taskId) => onTaskSelected(id, taskId)}\r\n                  onRemoveClick={(taskId) => onTaskRemove(id, taskId)}\r\n                  onAddClick={(taskId) => onTaskAdd(id, taskId)}\r\n                  active={task.active}\r\n                  isLast={idx === tasks.length - 1}\r\n                />\r\n              </>\r\n            );\r\n          })}\r\n        </ReactSortable>\r\n        {active && (\r\n          <div className=\"remove-wrapper\" onClick={() => onProcessRemove(id)}>\r\n            <i className=\"fas fa-trash la-lg\" />\r\n          </div>\r\n        )}\r\n        {active && isLast && (\r\n          <div className=\"right-icons-wrapper-process\">\r\n            <div title=\"Add next task\" onClick={() => onAddProcess(id)}>\r\n              <i className=\"fas fa-arrow-circle-right fa-3x\" />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DecisionSplit = ({ decisionTasks }) => {\r\n  return (\r\n    <div style={{ marginLeft: 35 }}>\r\n      {decisionTasks?.map((task, indx) => {\r\n        return (\r\n          <Task\r\n            key={task.id}\r\n            id={task.id}\r\n            title={task.title}\r\n            style={indx > 0 ? { marginTop: 20 } : undefined}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Process;\r\n","import React, { useState } from \"react\";\r\nimport Process from \"./Process\";\r\nimport \"./Process.css\";\r\nimport \"./Task.css\";\r\n\r\nconst definition = [\r\n  {\r\n    id: \"process1\",\r\n    title: \"Capture Initial Data\",\r\n    active: false,\r\n    tasks: [\r\n      {\r\n        id: \"Capture KYC\",\r\n        title: \"Capture KYC\",\r\n        active: false,\r\n      },\r\n      {\r\n        id: \"Approve Risk\",\r\n        title: \"Approve Risk\",\r\n        active: false,\r\n      },\r\n      {\r\n        id: \"Some Decision\",\r\n        title: \"Some Decision\",\r\n        active: false,\r\n        type: \"decision\",\r\n        outcomes: {\r\n          x: {\r\n            id: \"Outcome 1\",\r\n            title: \"Outcome 1\",\r\n            active: false,\r\n          },\r\n          y: {\r\n            id: \"Outcome 2\",\r\n            title: \"Outcome 2\",\r\n            active: false,\r\n          },\r\n          // z: {\r\n          //   id: \"Outcome 3\",\r\n          //   title: \"Outcome 3\",\r\n          //   active: false,\r\n          // },\r\n        },\r\n      },\r\n      {\r\n        id: \"Verify Entity\",\r\n        title: \"Verify Entity\",\r\n        active: false,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: \"process2\",\r\n    title: \"process2\",\r\n    active: false,\r\n    tasks: [\r\n      {\r\n        id: \"process2 Capture KYC\",\r\n        title: \"Capture KYC\",\r\n        active: false,\r\n      },\r\n      {\r\n        id: \"Risk Assessment\",\r\n        title: \"Risk Assessment\",\r\n        active: false,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst Workspace = ({ title }) => {\r\n  const [state, setState] = useState(definition);\r\n\r\n  const handleTaskSelected = (processId, taskId) => {\r\n    const process = state.find((x) => x.id === processId);\r\n    const processIndex = state.indexOf(process);\r\n\r\n    const task = process.tasks.find((x) => x.id === taskId);\r\n    const taskIndx = process.tasks.indexOf(task);\r\n\r\n    const tasksCopy = [...process.tasks];\r\n    tasksCopy[taskIndx] = {\r\n      ...task,\r\n      active: !task.active,\r\n    };\r\n\r\n    const processes = [...state];\r\n    processes[processIndex] = {\r\n      ...process,\r\n      tasks: tasksCopy,\r\n    };\r\n\r\n    setState(processes);\r\n  };\r\n\r\n  const handleProcessSelected = (processId) => {\r\n    const process = state.find((x) => x.id === processId);\r\n    const processIndex = state.indexOf(process);\r\n    const processes = [...state];\r\n    processes[processIndex] = {\r\n      ...process,\r\n      active: !processes[processIndex].active,\r\n    };\r\n    setState(processes);\r\n  };\r\n\r\n  const handleProcessRemove = (processId) => {\r\n    setState(state.filter((p) => p.id !== processId));\r\n  };\r\n\r\n  const handleAddProcess = (processId) => {\r\n    const processes = state.map((x) => {\r\n      return {\r\n        ...x,\r\n        active: false,\r\n      };\r\n    });\r\n    processes.push({\r\n      id: Math.random().toString(36).substring(7),\r\n      title: \"Change me\",\r\n      active: false,\r\n      tasks: [\r\n        { id: Math.random().toString(36).substring(7), title: \"Change me\" },\r\n      ],\r\n    });\r\n    setState(processes);\r\n  };\r\n\r\n  const handleTaskAdd = (processId, taskId) => {\r\n    const process = state.find((x) => x.id === processId);\r\n    const processIndex = state.indexOf(process);\r\n\r\n    const tasksCopy = process.tasks.map((t) => {\r\n      return {\r\n        ...t,\r\n        active: false,\r\n      };\r\n    });\r\n\r\n    tasksCopy.push({\r\n      id: Math.random().toString(36).substring(7),\r\n      title: \"Change me\",\r\n      active: false,\r\n    });\r\n\r\n    const processes = [...state];\r\n    processes[processIndex] = {\r\n      ...process,\r\n      tasks: tasksCopy,\r\n    };\r\n    setState(processes);\r\n  };\r\n\r\n  const handleTaskRemove = (processId, taskId) => {\r\n    const process = state.find((x) => x.id === processId);\r\n    const processIndex = state.indexOf(process);\r\n    const tasks = process.tasks.filter((x) => x.id !== taskId);\r\n    const processes = [...state];\r\n    processes[processIndex] = {\r\n      ...process,\r\n      tasks: tasks,\r\n    };\r\n\r\n    setState(processes);\r\n  };\r\n\r\n  const handleSortTasks = (processId, newState, sortable, store) => {\r\n    console.log(newState);\r\n    const process = state.find((x) => x.id === processId);\r\n    const processIndex = state.indexOf(process);\r\n    const processes = [...state];\r\n    processes[processIndex] = {\r\n      ...process,\r\n      tasks: newState.filter((x) => x),\r\n    };\r\n    setState(processes);\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", height: \"100%\", marginTop: 50 }}>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <div className=\"process-wrapper\">\r\n          <span className=\"process-text\">{title}</span>\r\n          {state.map((process, idx) => {\r\n            return (\r\n              <>\r\n                {idx > 0 && <span style={{ marginLeft: 5 }}>{\"---->\"}</span>}\r\n                <Process\r\n                  key={process.id}\r\n                  id={process.id}\r\n                  title={process.title}\r\n                  active={process.active}\r\n                  tasks={process.tasks}\r\n                  isLast={idx === state.length - 1}\r\n                  onTaskSelected={handleTaskSelected}\r\n                  onTaskAdd={handleTaskAdd}\r\n                  onTaskRemove={handleTaskRemove}\r\n                  onProcessSelected={handleProcessSelected}\r\n                  onProcessRemove={handleProcessRemove}\r\n                  onAddProcess={handleAddProcess}\r\n                  sortTasks={handleSortTasks}\r\n                />\r\n              </>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Workspace;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport function useKeyPress(targetKey) {\r\n  // State for keeping track of whether key is pressed\r\n  const [keyPressed, setKeyPressed] = useState(false);\r\n\r\n  // If pressed key is our target key then set to true\r\n  function downHandler({ key }) {\r\n    if (key === targetKey) {\r\n      setKeyPressed(true);\r\n    }\r\n  }\r\n\r\n  // If released key is our target key then set to false\r\n  const upHandler = ({ key }) => {\r\n    if (key === targetKey) {\r\n      setKeyPressed(false);\r\n    }\r\n  };\r\n\r\n  // Add event listeners\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", downHandler);\r\n    window.addEventListener(\"keyup\", upHandler);\r\n    // Remove event listeners on cleanup\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", downHandler);\r\n      window.removeEventListener(\"keyup\", upHandler);\r\n    };\r\n  }, []); // Empty array ensures that effect is only run on mount and unmount\r\n\r\n  return keyPressed;\r\n}\r\n","import React from \"react\";\r\nimport Workspace from \"./Workspace\";\r\nimport { PanZoom } from \"react-easy-panzoom\";\r\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\r\nimport { useKeyPress } from \"../useKeyPress\";\r\n\r\nfunction App() {\r\n  const shiftPress = useKeyPress(\"Shift\");\r\n\r\n  return (\r\n    <>\r\n      <PanZoom preventPan={() => !shiftPress}>\r\n        {/* <TransformWrapper\r\n        style={{ width: \"100%\" }}\r\n        wheel={{ wheelEnabled: true }}\r\n        pan={{ disabled: !shiftPress }}\r\n      >\r\n        <TransformComponent> */}\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            height: \"100vh\",\r\n          }}\r\n        >\r\n          <div style={{ position: \"relative\" }}>\r\n            <Workspace title={\"First stage\"} />\r\n          </div>\r\n          <div style={{ position: \"relative\", marginTop: 50 }}>\r\n            <Workspace title={\"Second stage\"} />\r\n          </div>\r\n          <div style={{ position: \"relative\", marginTop: 50 }}>\r\n            <Workspace title={\"Third stage\"} />\r\n          </div>\r\n        </div>\r\n        {/* </TransformComponent>\r\n     </TransformWrapper> */}\r\n      </PanZoom>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\n\r\nconst ProcessArrow = () => {\r\n  return (\r\n    <div\r\n      className=\"drag-ignore\"\r\n      style={{\r\n        width: 60,\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        alignSelf: \"center\",\r\n      }}\r\n    >\r\n      <svg viewBox=\"0 0 160 200\">\r\n        <g transform=\"translate(0,50)\">\r\n          <line\r\n            y2=\"24.704\"\r\n            x1=\"1.266\"\r\n            x2=\"125.3\"\r\n            stroke=\"#000000\"\r\n            strokeMiterlimit=\"10\"\r\n            y1=\"24.704\"\r\n            strokeWidth=\"12\"\r\n          />\r\n          <polygon points=\"124.4 6.284 124.4 44.606 148.35 23.69\" />\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProcessArrow;\r\n","import Task from \"./Task\";\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst Task = ({\r\n  stageId,\r\n  processId,\r\n  id,\r\n  decision,\r\n  active,\r\n  title,\r\n  onAddtask,\r\n  onTaskRemove,\r\n  onTaskActive,\r\n}) => {\r\n  return (\r\n    <div\r\n      className={`f-task-root ${decision && \"f-task-decision\"} ${\r\n        active && \"f-task-root-active\"\r\n      }`}\r\n    >\r\n      <div className=\"f-task-inner\">\r\n        <div\r\n          style={{ width: \"100%\", height: \"100%\" }}\r\n          onClick={() => onTaskActive(stageId, processId, id)}\r\n        >\r\n          <i className=\"f-task-logo fas fa-user la-lg\" />\r\n          <div className=\"f-task-title\">{title}</div>\r\n        </div>\r\n        {active && (\r\n          <>\r\n            <div className=\"f-task-left-icons-wrapper\">\r\n              <div\r\n                title=\"Add previous task\"\r\n                onClick={() => onAddtask(stageId, processId, id)}\r\n              >\r\n                <i className=\"fas fa-arrow-circle-left fa-2x\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"f-task-top-icons-wrapper\">\r\n              <i\r\n                title=\"Reorder\"\r\n                className=\"fas fa-bacon la-lg f-task-icon-drag f-task-top-icon drag-handle\"\r\n              />\r\n              <i\r\n                title=\"Properties\"\r\n                className=\"fas fa-cog la-lg f-task-icon-space f-task-top-icon\"\r\n              />\r\n              <i\r\n                title=\"Copy\"\r\n                className=\"fas fa-cut la-lg f-task-icon-space f-task-top-icon\"\r\n              />\r\n              <i\r\n                title=\"Copy\"\r\n                className=\"fas fa-copy la-lg f-task-icon-space f-task-top-icon\"\r\n              />\r\n              <i\r\n                title=\"Remove\"\r\n                className=\"fas fa-trash la-lg f-task-top-icon\"\r\n                onClick={() => onTaskRemove(stageId, processId, id)}\r\n              />\r\n            </div>\r\n            <div className=\"f-task-right-icons-wrapper\">\r\n              <div\r\n                title=\"Add next task\"\r\n                onClick={() => onAddtask(stageId, processId, id)}\r\n              >\r\n                <i className=\"fas fa-arrow-circle-right fa-2x\" />\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\n\r\nconst TaskArrow = () => {\r\n  return (\r\n    <div\r\n      className=\"drag-ignore\"\r\n      style={{\r\n        width: 30,\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        alignSelf: \"center\",\r\n      }}\r\n    >\r\n      <svg viewBox=\"0 0 150 150\">\r\n        <g transform=\"translate(0,50)\">\r\n          <line\r\n            y2=\"24.704\"\r\n            x1=\"1.266\"\r\n            x2=\"125.3\"\r\n            stroke=\"#000000\"\r\n            strokeMiterlimit=\"10\"\r\n            y1=\"24.704\"\r\n            strokeWidth=\"6\"\r\n          />\r\n          <polygon points=\"124.4 6.284 124.4 44.606 148.35 23.69\" />\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskArrow;\r\n","import React from \"react\";\r\nimport Task from \"../Task\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport \"./index.css\";\r\nimport TaskArrow from \"./TaskArrow\";\r\n\r\nconst TaskArrowPair = ({\r\n  stageId,\r\n  processId,\r\n  id,\r\n  type,\r\n  outcomes,\r\n  skipArrow,\r\n  ...rest\r\n}) => {\r\n  if (type === \"decision\") {\r\n    return (\r\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n        {!skipArrow && <TaskArrow key={`arr_${id}`} />}\r\n        <Task\r\n          decision\r\n          key={id}\r\n          stageId={stageId}\r\n          processId={processId}\r\n          id={id}\r\n          {...rest}\r\n        />\r\n        <div style={{ marginLeft: 50 }}>\r\n          {outcomes?.map((outcome) => {\r\n            return (\r\n              <div key={outcome.id} style={{ marginBottom: 15 }}>\r\n                <Task\r\n                  {...rest}\r\n                  key={outcome.id}\r\n                  title={outcome.title}\r\n                  stageId={stageId}\r\n                  processId={processId}\r\n                  id={outcome.id}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      {!skipArrow && <TaskArrow key={`arr_${id}`} />}\r\n      <Task\r\n        key={id}\r\n        stageId={stageId}\r\n        processId={processId}\r\n        id={id}\r\n        {...rest}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Process = ({\r\n  stageId,\r\n  id,\r\n  title,\r\n  active,\r\n  tasks,\r\n  decision,\r\n  onProcessActive,\r\n  onAddtask,\r\n  onTaskRemove,\r\n  onTaskActive,\r\n  onProcessAdd,\r\n  onProcessRemove,\r\n}) => {\r\n  return (\r\n    <div\r\n      onClick={(ev) => {\r\n        if (ev.target.className.includes(\"f-proc\"))\r\n          onProcessActive(stageId, id);\r\n      }}\r\n      className={`f-proc-root ${decision ? \"f-proc-root-decision\" : \"\"} ${\r\n        active ? \"f-proc-root-active\" : \"\"\r\n      }`}\r\n    >\r\n      <div className=\"f-proc-inner\">\r\n        <div className=\"f-proc-logo-wrapper\">\r\n          <i className=\"f-proc-logo fas fa-user la-lg\" />\r\n          <div className=\"f-proc-title\">{title}</div>\r\n        </div>\r\n        {/* justifyContent: \"center\" */}\r\n        <ReactSortable\r\n          style={{ display: \"flex\", alignItems: \"center\" }}\r\n          list={tasks}\r\n          filter=\".drag-ignore\"\r\n          handle=\".drag-handle\"\r\n          ghostClass=\"ghost-task\"\r\n          setList={() => {}}\r\n        >\r\n          {tasks.map((task, indx) => (\r\n            <TaskArrowPair\r\n              key={task.id}\r\n              id={task.id}\r\n              active={task.active}\r\n              stageId={stageId}\r\n              outcomes={task.outcomes}\r\n              processId={id}\r\n              title={task.title}\r\n              type={task.type}\r\n              onAddtask={onAddtask}\r\n              onTaskRemove={onTaskRemove}\r\n              onTaskActive={onTaskActive}\r\n              skipArrow={indx === 0}\r\n            />\r\n          ))}\r\n        </ReactSortable>\r\n        {active && (\r\n          <>\r\n            <div className=\"f-proc-left-icons-wrapper\">\r\n              <div\r\n                title=\"Add previous task\"\r\n                onClick={() => onProcessAdd(stageId, id)}\r\n              >\r\n                <i className=\"fas fa-arrow-circle-left fa-2x\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"f-proc-top-icons-wrapper\">\r\n              <i\r\n                title=\"Reorder\"\r\n                className=\"fas fa-bacon la-lg f-task-icon-drag f-task-top-icon drag-handle\"\r\n              />\r\n              <i\r\n                title=\"Properties\"\r\n                className=\"fas fa-cog la-lg f-task-icon-space f-task-top-icon\"\r\n              />\r\n              <i\r\n                title=\"Copy\"\r\n                className=\"fas fa-cut la-lg f-task-icon-space f-task-top-icon\"\r\n              />\r\n              <i\r\n                title=\"Copy\"\r\n                className=\"fas fa-copy la-lg f-task-icon-space f-task-top-icon\"\r\n              />\r\n              <i\r\n                title=\"Remove\"\r\n                className=\"fas fa-trash la-lg f-task-top-icon\"\r\n                onClick={() => onProcessRemove(stageId, id)}\r\n              />\r\n            </div>\r\n            <div className=\"f-proc-right-icons-wrapper\">\r\n              <div\r\n                title=\"Add next task\"\r\n                onClick={() => onProcessAdd(stageId, id)}\r\n              >\r\n                <i className=\"fas fa-arrow-circle-right fa-2x\" />\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Process;\r\n","import Process from \"./Process\";\r\n\r\nexport default Process;\r\n","import React from \"react\";\r\nimport ProcessArrow from \"./ProcessArrow\";\r\nimport Process from \"../Process\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport \"./index.css\";\r\n\r\nconst ProcessArrowPair = ({ id, type, outcomes, skipArrow, ...rest }) => {\r\n  if (type === \"decision\") {\r\n    return (\r\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n        {!skipArrow && <ProcessArrow key={`arr_${id}`} />}\r\n        <Process decision key={id} id={id} {...rest} />\r\n        <div style={{ marginLeft: 50 }}>\r\n          {outcomes?.map((outcome) => {\r\n            return (\r\n              <div key={outcome.id} style={{ marginBottom: 15 }}>\r\n                <Process\r\n                  {...rest}\r\n                  key={outcome.id}\r\n                  tasks={outcome.tasks}\r\n                  title={outcome.title}\r\n                  id={outcome.id}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      {!skipArrow && <ProcessArrow key={`arr_${id}`} />}\r\n      <Process key={id} id={id} {...rest} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Stage = ({\r\n  id,\r\n  title,\r\n  processes,\r\n  active,\r\n  onActive,\r\n  onAddtask,\r\n  onTaskRemove,\r\n  onTaskActive,\r\n  onProcessAdd,\r\n  onProcessRemove,\r\n  onProcessActive,\r\n}) => {\r\n  return (\r\n    <div\r\n      onClick={(ev) => {\r\n        if (ev.target?.className?.includes(\"f-stage\")) onActive(id);\r\n      }}\r\n      className={`f-stage-root  ${active ? \"f-stage-root-active\" : \"\"}`}\r\n    >\r\n      <div className=\"f-stage-inner\">\r\n        <div className=\"f-stage-logo-wrapper\">\r\n          <i className=\"f-stage-logo fas fa-user la-lg\" />\r\n          <div className=\"f-stage-title\">{title}</div>\r\n        </div>\r\n        <ReactSortable\r\n          style={{ display: \"flex\", justifyContent: \"center\" }}\r\n          list={processes}\r\n          filter=\".drag-ignore\"\r\n          handle=\".drag-handle\"\r\n          setList={() => {}}\r\n        >\r\n          {processes.map((process, indx) => (\r\n            <ProcessArrowPair\r\n              key={process.id}\r\n              stageId={id}\r\n              id={process.id}\r\n              title={process.title}\r\n              active={process.active}\r\n              type={process.type}\r\n              outcomes={process.outcomes}\r\n              onProcessAdd={onProcessAdd}\r\n              onProcessRemove={onProcessRemove}\r\n              onProcessActive={onProcessActive}\r\n              tasks={process.tasks}\r\n              onAddtask={onAddtask}\r\n              onTaskRemove={onTaskRemove}\r\n              onTaskActive={onTaskActive}\r\n              skipArrow={indx === 0}\r\n            />\r\n          ))}\r\n        </ReactSortable>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stage;\r\n","import React from \"react\";\r\n\r\nconst StageArrow = () => {\r\n  return (\r\n    <div\r\n      className=\"drag-ignore\"\r\n      style={{\r\n        width: 60,\r\n        height: 100,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n      }}\r\n    >\r\n      <svg viewBox=\"0 0 160 200\">\r\n        <g transform=\"translate(100,50) rotate(90)\">\r\n          <line\r\n            y2=\"24.704\"\r\n            x1=\"1.266\"\r\n            x2=\"125.3\"\r\n            stroke=\"#000000\"\r\n            strokeMiterlimit=\"10\"\r\n            y1=\"24.704\"\r\n            strokeWidth=\"18\"\r\n          />\r\n          <polygon points=\"124.4 6.284 124.4 44.606 148.35 23.69\" />\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StageArrow;\r\n","export const initialStages_clean = [\r\n  {\r\n    id: \"stage1\",\r\n    title: \"Stage one\",\r\n    processes: [\r\n      {\r\n        id: \"proc1\",\r\n        title: \"First Process\",\r\n        tasks: [\r\n          { id: 123, title: \"Capture KYC Data\" },\r\n          { id: 123444, title: \"Risk Assessment\" },\r\n        ],\r\n      },\r\n      {\r\n        id: \"proc2\",\r\n        title: \"Second Process\",\r\n        tasks: [\r\n          { id: 123, title: \"Capture KYC Data\" },\r\n          { id: 663, title: \"End Journey\" },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: \"stage2\",\r\n    title: \"Stage Two\",\r\n    processes: [\r\n      {\r\n        id: \"proc11\",\r\n        title: \"First Process\",\r\n        tasks: [\r\n          { id: 123, title: \"Capture KYC Data\" },\r\n          { id: 123444, title: \"Risk Assessment\" },\r\n        ],\r\n      },\r\n      {\r\n        id: \"proc23\",\r\n        title: \"Second Process\",\r\n        tasks: [\r\n          { id: 123, title: \"Capture KYC Data\" },\r\n          { id: 663, title: \"End Journey\" },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const initialStages_HasTaskLevelDecision = [\r\n  {\r\n    id: \"stage1\",\r\n    title: \"Stage one\",\r\n    processes: [\r\n      {\r\n        id: \"proc1\",\r\n        title: \"First Process\",\r\n        tasks: [\r\n          { id: 123, title: \"Capture KYC Data\" },\r\n          { id: 123444, title: \"Risk Assessment\" },\r\n        ],\r\n      },\r\n      {\r\n        id: \"proc2\",\r\n        title: \"Second Process\",\r\n        tasks: [\r\n          { id: 123, title: \"Capture KYC Data\" },\r\n          {\r\n            id: 534,\r\n            type: \"decision\",\r\n            title: \"Decision\",\r\n            outcomes: [\r\n              { id: 55666, title: \"Outcome 1\" },\r\n              { id: 5566654, title: \"Outcome 2\" },\r\n              { id: 6654, title: \"Outcome 3\" },\r\n            ],\r\n          },\r\n          { id: 663, title: \"End Journey\" },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: \"Customer Checks\",\r\n    title: \"Customer Checks\",\r\n    processes: [\r\n      {\r\n        id: \"Screening\",\r\n        title: \"Screening\",\r\n        tasks: [\r\n          {\r\n            id: \"Send for Screening\",\r\n            title: \"Send for Screening\",\r\n          },\r\n          {\r\n            id: \"Material Hits Present\",\r\n            type: \"decision\",\r\n            title: \"Material Hits Present\",\r\n            outcomes: [\r\n              { id: 556266, title: \"[Yes] Escalate & End Journey\" },\r\n              { id: 231212, title: \"[Else]\" },\r\n            ],\r\n          },\r\n          {\r\n            id: \"Screening Complete\",\r\n            title: \"Screening Complete\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: \"Risk\",\r\n        title: \"Risk\",\r\n        tasks: [\r\n          {\r\n            id: \"R12isk Assessment\",\r\n            title: \"Risk Assessment\",\r\n          },\r\n          {\r\n            id: \"12High Risk\",\r\n            type: \"decision\",\r\n            title: \"High Risk\",\r\n            outcomes: [\r\n              { id: 5533666, title: \"[Yes] Escalate & End Journey\" },\r\n              { id: 2351112, title: \"[Else]\" },\r\n            ],\r\n          },\r\n          {\r\n            id: \"Radomplete Request\",\r\n            title: \"Complete Request\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: \"Final Review\",\r\n    title: \"Final Review\",\r\n    processes: [\r\n      {\r\n        id: \"Reviews\",\r\n        title: \"Reviews\",\r\n        tasks: [\r\n          { id: 123, title: \"Onboarding Review\" },\r\n          {\r\n            id: 123444,\r\n            title: \"Additional Escalation Triggers\",\r\n            type: \"decision\",\r\n            outcomes: [\r\n              { id: 55666, title: \"[Yes] Compliance Review\" },\r\n              { id: 556661, title: \"[Else] Compliance Review\" },\r\n            ],\r\n          },\r\n          { id: \"8975653\", title: \"Downstream Integration\" },\r\n          { id: \"322\", title: \"Complete Journey\" },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const initialStages_HasProcessLevelDecision = [\r\n  {\r\n    id: \"stage1\",\r\n    title: \"Stage one\",\r\n    processes: [\r\n      {\r\n        id: \"proc1\",\r\n        title: \"First Process\",\r\n        tasks: [\r\n          { id: 123, title: \"Capture KYC Data\" },\r\n          { id: 123444, title: \"Risk Assessment\" },\r\n        ],\r\n      },\r\n      {\r\n        id: \"proc2\",\r\n        title: \"Decision\",\r\n        tasks: [],\r\n        type: \"decision\",\r\n        outcomes: [\r\n          {\r\n            id: \"Proc outcome 1\",\r\n            title: \"Proc outcome 1\",\r\n            tasks: [\r\n              { id: 123, title: \"Capture KYC Data\" },\r\n              { id: 123444, title: \"Risk Assessment\" },\r\n            ],\r\n          },\r\n          {\r\n            id: \"Proc outcome 2\",\r\n            title: \"Proc outcome2\",\r\n            tasks: [\r\n              { id: 12434, title: \"Capture KYC Data\" },\r\n              { id: 12344444, title: \"Risk Assessment\" },\r\n              { id: 123333444, title: \"End Journey\" },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: \"Last Processdas\",\r\n        title: \"Last Process\",\r\n        tasks: [\r\n          { id: 188723, title: \"Capture KYC Data\" },\r\n          { id: 12377444, title: \"Risk Assessment\" },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import React, { useState } from \"react\";\r\nimport { PanZoom } from \"react-easy-panzoom\";\r\nimport { useKeyPress } from \"../useKeyPress\";\r\nimport Stage from \"./Stage/Stage\";\r\nimport StageArrow from \"./StageArrow\";\r\nimport {\r\n  initialStages_clean,\r\n  initialStages_HasTaskLevelDecision,\r\n  initialStages_HasProcessLevelDecision,\r\n} from \"./data\";\r\n\r\nconst randomId = () => Math.random().toString(36).substring(7);\r\n\r\nconst Workspace = ({ dataSet }) => {\r\n  const shiftPress = useKeyPress(\"Control\");\r\n  const getData = (dataSet) => {\r\n    if (dataSet === 1) {\r\n      return initialStages_clean;\r\n    } else if (dataSet === 2) {\r\n      return initialStages_HasTaskLevelDecision;\r\n    } else if (dataSet === 3) {\r\n      return initialStages_HasProcessLevelDecision;\r\n    }\r\n  };\r\n  const [stages, setStages] = useState(getData(dataSet));\r\n\r\n  const unselectAll = () => {\r\n    const stagesCopy = stages.map((stage) => {\r\n      return {\r\n        ...stage,\r\n        active: false,\r\n        processes: stage.processes.map((proc) => {\r\n          return {\r\n            ...proc,\r\n            active: false,\r\n            tasks: proc.tasks.map((task) => {\r\n              return {\r\n                ...task,\r\n                active: false,\r\n              };\r\n            }),\r\n          };\r\n        }),\r\n      };\r\n    });\r\n    setStages(stagesCopy);\r\n  };\r\n\r\n  const handleWrapperClick = (ev) => {\r\n    if (ev.target.className?.includes(\"zoomable-area\")) {\r\n      unselectAll();\r\n    }\r\n  };\r\n\r\n  const handleStageActive = (stageId) => {\r\n    const stage = stages.find((stage) => stage.id === stageId);\r\n    const stageIndex = stages.indexOf(stage);\r\n    const stagesCopy = [...stages];\r\n\r\n    stagesCopy[stageIndex] = {\r\n      ...stage,\r\n      active: !stage.active,\r\n    };\r\n    setStages(stagesCopy);\r\n  };\r\n\r\n  const handleProcessActive = (stageId, processId) => {\r\n    const stage = stages.find((stage) => stage.id === stageId);\r\n    const stageIndex = stages.indexOf(stage);\r\n    const stagesCopy = [...stages];\r\n\r\n    const process = stage.processes.find((proc) => proc.id === processId);\r\n    const processIndex = stage.processes.indexOf(process);\r\n    const processesCopy = [...stage.processes];\r\n    processesCopy[processIndex] = {\r\n      ...process,\r\n      active: !process.active,\r\n    };\r\n\r\n    stagesCopy[stageIndex] = {\r\n      ...stage,\r\n      processes: processesCopy,\r\n    };\r\n    setStages(stagesCopy);\r\n  };\r\n\r\n  const handleTaskActive = (stageId, processId, taskId) => {\r\n    const stage = stages.find((stage) => stage.id === stageId);\r\n    const stageIndex = stages.indexOf(stage);\r\n    const stagesCopy = [...stages];\r\n\r\n    const process = stage.processes.find((proc) => proc.id === processId);\r\n    const processIndex = stage.processes.indexOf(process);\r\n\r\n    const task = process.tasks.find((task) => task.id === taskId);\r\n    const taskIndex = process.tasks.indexOf(task);\r\n\r\n    const tasksCopy = [...process.tasks];\r\n    tasksCopy[taskIndex] = {\r\n      ...task,\r\n      active: !task.active,\r\n    };\r\n\r\n    const processesCopy = [...stage.processes];\r\n    processesCopy[processIndex] = {\r\n      ...process,\r\n      tasks: tasksCopy,\r\n    };\r\n\r\n    stagesCopy[stageIndex] = {\r\n      ...stage,\r\n      processes: processesCopy,\r\n    };\r\n    setStages(stagesCopy);\r\n  };\r\n\r\n  const handleAddTask = (stageId, processId, taskId) => {\r\n    const stage = stages.find((stage) => stage.id === stageId);\r\n    const stageIndex = stages.indexOf(stage);\r\n\r\n    const process = stage.processes.find((proc) => proc.id === processId);\r\n    const processIndex = stage.processes.indexOf(process);\r\n    const processTasks = [\r\n      ...process.tasks,\r\n      { id: randomId(), title: \"New Task\" },\r\n    ];\r\n    const processesCopy = [...stage.processes];\r\n    processesCopy[processIndex].tasks = processTasks;\r\n    const stagesCopy = [...stages];\r\n    stagesCopy[stageIndex] = {\r\n      ...stage,\r\n      processes: processesCopy,\r\n    };\r\n\r\n    setStages(stagesCopy);\r\n    unselectAll();\r\n  };\r\n\r\n  const handleTaskRemove = (stageId, processId, taskId) => {\r\n    const stage = stages.find((stage) => stage.id === stageId);\r\n    const stageIndex = stages.indexOf(stage);\r\n\r\n    const process = stage.processes.find((proc) => proc.id === processId);\r\n    const processIndex = stage.processes.indexOf(process);\r\n\r\n    const tasksCopy = process.tasks.filter((task) => task.id !== taskId);\r\n\r\n    const stagesCopy = [...stages];\r\n    const processesCopy = [...stage.processes];\r\n    processesCopy[processIndex].tasks = tasksCopy;\r\n    stagesCopy[stageIndex].processes = processesCopy;\r\n    setStages(stagesCopy);\r\n  };\r\n\r\n  const handleProcessAdd = (stageId, processId) => {\r\n    const stage = stages.find((stage) => stage.id === stageId);\r\n    const stageIndex = stages.indexOf(stage);\r\n\r\n    const processesCopy = [\r\n      ...stage.processes,\r\n      {\r\n        id: randomId(),\r\n        title: \"New Process\",\r\n        tasks: [{ id: randomId(), title: \"New Task\" }],\r\n      },\r\n    ];\r\n    const stagesCopy = [...stages];\r\n    stagesCopy[stageIndex].processes = processesCopy;\r\n    setStages(stagesCopy);\r\n    unselectAll();\r\n  };\r\n\r\n  const handleProcessRemove = (stageId, processId) => {\r\n    const stage = stages.find((stage) => stage.id === stageId);\r\n    const stageIndex = stages.indexOf(stage);\r\n\r\n    const processesCopy = stages[stageIndex].processes.filter(\r\n      (proc) => proc.id !== processId\r\n    );\r\n    const stagesCopy = [...stages];\r\n    stagesCopy[stageIndex].processes = processesCopy;\r\n    setStages(stagesCopy);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n        // width: \"900px\",\r\n        // height: \"900px\",\r\n        // border: \"2px solid red\",\r\n      }}\r\n      onClick={handleWrapperClick}\r\n    >\r\n      <PanZoom\r\n        className=\"zoomable-area\"\r\n        style={{ height: \"100%\", width: \"100%\" }}\r\n        disableDoubleClickZoom\r\n        preventPan={() => shiftPress}\r\n      >\r\n        {stages.map((stage, index) => {\r\n          return (\r\n            <React.Fragment key={stage.id}>\r\n              {index > 0 && <StageArrow key={`arr_${stage.id}`} />}\r\n              <Stage\r\n                key={stage.id}\r\n                id={stage.id}\r\n                active={stage.active}\r\n                title={stage.title}\r\n                processes={stage.processes}\r\n                onActive={handleStageActive}\r\n                onProcessAdd={handleProcessAdd}\r\n                onProcessRemove={handleProcessRemove}\r\n                onProcessActive={handleProcessActive}\r\n                onAddtask={handleAddTask}\r\n                onTaskRemove={handleTaskRemove}\r\n                onTaskActive={handleTaskActive}\r\n              />\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      </PanZoom>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Workspace;\r\n","import React from \"react\";\r\n\r\nconst TaskArrow = () => {\r\n  return (\r\n    <div\r\n      className=\"drag-ignore\"\r\n      style={{\r\n        width: 60,\r\n        paddingLeft: 5,\r\n        paddingRight: 5,\r\n        alignSelf: \"center\",\r\n      }}\r\n    >\r\n      <svg viewBox=\"0 0 160 200\">\r\n        <g transform=\"translate(0,60)\">\r\n          <line\r\n            y2=\"24.704\"\r\n            x1=\"1.266\"\r\n            x2=\"125.3\"\r\n            stroke=\"#a1a1a1\"\r\n            strokeMiterlimit=\"10\"\r\n            y1=\"24.704\"\r\n            strokeWidth=\"6\"\r\n          />\r\n          <polygon\r\n            fill=\"#a1a1a1\"\r\n            points=\"124.4 6.284 124.4 44.606 148.35 23.69\"\r\n          />\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskArrow;\r\n","import Task from \"./Task\";\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst Task = ({\r\n  processId,\r\n  id,\r\n  decision,\r\n  active,\r\n  title,\r\n  onAddtask,\r\n  onTaskRemove,\r\n  onTaskActive,\r\n}) => {\r\n  return (\r\n    <div\r\n      className={`f3-task-root ${decision && \"f3-task-decision\"} ${\r\n        active && \"f3-task-root-active\"\r\n      }`}\r\n    >\r\n      <div className=\"f3-task-inner\">\r\n        <div\r\n          style={{ width: \"100%\", height: \"100%\" }}\r\n          onClick={() => onTaskActive(processId, id)}\r\n        >\r\n          <i className=\"f3-task-logo fas fa-user la-lg\" />\r\n          <div className=\"f3-task-title\">{title}</div>\r\n        </div>\r\n        {active && (\r\n          <>\r\n            <div className=\"f3-task-left-icons-wrapper\">\r\n              <div\r\n                title=\"Add previous task\"\r\n                onClick={() => onAddtask(processId, id)}\r\n              >\r\n                <i className=\"fas fa-arrow-circle-left fa-2x\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"f3-task-top-icons-wrapper\">\r\n              <i\r\n                title=\"Reorder\"\r\n                className=\"fas fa-bacon la-lg f3-task-icon-drag f3-task-top-icon drag-handle\"\r\n              />\r\n              <i\r\n                title=\"Properties\"\r\n                className=\"fas fa-cog la-lg f3-task-icon-space f3-task-top-icon\"\r\n              />\r\n              <i\r\n                title=\"Copy\"\r\n                className=\"fas fa-cut la-lg f3-task-icon-space f3-task-top-icon\"\r\n              />\r\n              <i\r\n                title=\"Copy\"\r\n                className=\"fas fa-copy la-lg f3-task-icon-space f3-task-top-icon\"\r\n              />\r\n              <i\r\n                title=\"Remove\"\r\n                className=\"fas fa-trash la-lg f3-task-top-icon\"\r\n                onClick={() => onTaskRemove(processId, id)}\r\n              />\r\n            </div>\r\n            <div className=\"f3-task-right-icons-wrapper\">\r\n              <div\r\n                title=\"Add next task\"\r\n                onClick={() => onAddtask(processId, id)}\r\n              >\r\n                <i className=\"fas fa-arrow-circle-right fa-2x\" />\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport TaskArrow from \"./TaskArrow\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport \"./index.css\";\r\nimport Task from \"../Task\";\r\n\r\nconst TaskArrowPair = ({ id, type, title, outcomes, skipArrow, ...rest }) => {\r\n  if (type === \"decision\") {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        {!skipArrow && <TaskArrow key={`arr_${id}`} />}\r\n        {/* <Task decision key={id} id={id} {...rest} /> */}\r\n        <span>Condition: {title}</span>\r\n        <div style={{ marginLeft: 50 }}>\r\n          {outcomes?.map((outcome) => {\r\n            return (\r\n              <div key={outcome.id} style={{ marginBottom: 15 }}>\r\n                <Task\r\n                  {...rest}\r\n                  key={outcome.id}\r\n                  tasks={outcome.tasks}\r\n                  title={outcome.title}\r\n                  id={outcome.id}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n      {!skipArrow && <TaskArrow key={`arr_${id}`} />}\r\n      <Task key={id} title={title} id={id} {...rest} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Proc = ({\r\n  id,\r\n  title,\r\n  tasks,\r\n  active,\r\n  decision,\r\n  onActive,\r\n  onAddtask,\r\n  onTaskRemove,\r\n  onTaskActive,\r\n}) => {\r\n  return (\r\n    <div\r\n      onClick={(ev) => {\r\n        if (ev.target?.className?.includes(\"f3-proc\")) {\r\n          onActive(id);\r\n        }\r\n      }}\r\n      className={`f3-proc-root  ${decision && \"f3-proc-decision\"} ${\r\n        active ? \"f3-proc-root-active\" : \"\"\r\n      }`}\r\n    >\r\n      <div className=\"f3-proc-inner\">\r\n        <div className=\"f3-proc-logo-wrapper\">\r\n          <i className=\"f3-proc-logo fas fa-user la-lg\" />\r\n          <div className=\"f3-proc-title\">{title}</div>\r\n        </div>\r\n        <ReactSortable\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n          list={tasks}\r\n          filter=\".drag-ignore\"\r\n          handle=\".drag-handle\"\r\n          ghostClass=\"ghost-task\"\r\n          setList={() => {}}\r\n        >\r\n          {tasks.map((task, indx) => (\r\n            <TaskArrowPair\r\n              key={task.id}\r\n              processId={id}\r\n              id={task.id}\r\n              title={task.title}\r\n              active={task.active}\r\n              type={task.type}\r\n              outcomes={task.outcomes}\r\n              onAddtask={onAddtask}\r\n              onTaskRemove={onTaskRemove}\r\n              onTaskActive={onTaskActive}\r\n              skipArrow={indx === 0}\r\n            />\r\n          ))}\r\n        </ReactSortable>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Proc;\r\n","import Proc from \"./Proc\";\r\n\r\nexport default Proc;\r\n","import React from \"react\";\r\n\r\nconst ProcessArrow = () => {\r\n  return (\r\n    <div\r\n      className=\"drag-ignore\"\r\n      style={{\r\n        width: 60,\r\n        height: 100,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n      }}\r\n    >\r\n      <svg viewBox=\"0 0 160 200\">\r\n        <g transform=\"translate(100,50) rotate(90)\">\r\n          <line\r\n            y2=\"24.704\"\r\n            x1=\"1.266\"\r\n            x2=\"125.3\"\r\n            stroke=\"#a1a1a1\"\r\n            strokeMiterlimit=\"10\"\r\n            y1=\"24.704\"\r\n            strokeWidth=\"10\"\r\n          />\r\n          <polygon\r\n            fill=\"#a1a1a1\"\r\n            points=\"124.4 6.284 124.4 44.606 148.35 23.69\"\r\n          />\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProcessArrow;\r\n","import React, { Fragment } from \"react\";\r\nimport Proc from \"../Proc\";\r\nimport ProcessArrow from \"./ProcessArrow\";\r\n\r\nconst Processes = ({\r\n  processes,\r\n  onTaskActive,\r\n  onAddtask,\r\n  onTaskRemove,\r\n  onProcessActive,\r\n}) => {\r\n  const ProcessArrowPair = ({\r\n    id,\r\n    type,\r\n    title,\r\n    outcomes,\r\n    skipArrow,\r\n    ...rest\r\n  }) => {\r\n    if (type === \"decision\") {\r\n      return (\r\n        <>\r\n          {!skipArrow && <ProcessArrow key={`arr_${id}`} />}\r\n          <div style={{ border: \"1px dashed gray\", padding: 10 }}>\r\n            <span>\r\n              <i className=\"fas fa-user la-lg\" />\r\n              Condition: {title}\r\n            </span>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                marginTop: 20,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              {outcomes?.map((outcome) => {\r\n                return (\r\n                  <div style={{ marginLeft: 10 }}>\r\n                    <Proc\r\n                      {...rest}\r\n                      key={outcome.id}\r\n                      tasks={outcome.tasks}\r\n                      title={outcome.title}\r\n                      id={outcome.id}\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {!skipArrow && <ProcessArrow key={`arr_${id}`} />}\r\n        <Proc key={id} title={title} id={id} {...rest} />\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {processes.map((process, index) => {\r\n        return (\r\n          <Fragment key={process.id}>\r\n            <ProcessArrowPair\r\n              key={process.id}\r\n              id={process.id}\r\n              title={process.title}\r\n              tasks={process.tasks}\r\n              active={process.active}\r\n              type={process.type}\r\n              outcomes={process.outcomes}\r\n              onTaskActive={onTaskActive}\r\n              onAddtask={onAddtask}\r\n              onTaskRemove={onTaskRemove}\r\n              onActive={onProcessActive}\r\n              skipArrow={index === 0}\r\n            />\r\n          </Fragment>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Processes;\r\n","import React, { useState } from \"react\";\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row } from \"reactstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Processes from \"./Processes/Processes\";\r\nimport { PanZoom } from \"react-easy-panzoom\";\r\nimport { useKeyPress } from \"../useKeyPress\";\r\nimport \"./v3.css\";\r\nconst randomId = () => Math.random().toString(36).substring(7);\r\n\r\nconst tabs = [\r\n  \"New Request\",\r\n  \"Capture Client Data\",\r\n  \"Customer Checks\",\r\n  \"Final Review\",\r\n];\r\n\r\nconst initialProcesses = [\r\n  {\r\n    id: \"Initiate Case\",\r\n    title: \"Initiate Case\",\r\n    tasks: [\r\n      {\r\n        id: \"Capture Client Data\",\r\n        title: \"Capture Client Data\",\r\n      },\r\n      {\r\n        id: \"Sanctions Check\",\r\n        title: \"Sanctions Check\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: \"Risk Assessment process\",\r\n    title: \"Risk Assessment\",\r\n    tasks: [\r\n      {\r\n        id: \"3R12isk Assessment\",\r\n        title: \"Risk Assessment\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: \"Evaluate Risk\",\r\n    title: \"Evaluate Risk\",\r\n    type: \"decision\",\r\n    tasks: [],\r\n    outcomes: [\r\n      {\r\n        id: \"When High Risk\",\r\n        title: \"When High Risk\",\r\n        tasks: [\r\n          {\r\n            id: \"Review\",\r\n            type: \"decision\",\r\n            title: \"Review\",\r\n            outcomes: [{ id: 5533666, title: \"When yes:  End Journey\" }],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: \"Else\",\r\n        title: \"Else\",\r\n        tasks: [\r\n          {\r\n            id: \"Review\",\r\n            title: \"Do something\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: \"Evaluate Sanctions\",\r\n    title: \"Evaluate Sanctions\",\r\n    type: \"decision\",\r\n    tasks: [],\r\n    outcomes: [\r\n      {\r\n        id: \"Match\",\r\n        title: \"When Match\",\r\n        tasks: [\r\n          {\r\n            id: \"Review\",\r\n            type: \"decision\",\r\n            title: \"Review\",\r\n            outcomes: [\r\n              { id: 5533666, title: \"When yes:  End Journey\" },\r\n              { id: 5533666, title: \"Else:  Send email\" },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: \"Match\",\r\n        title: \"Else\",\r\n        tasks: [\r\n          {\r\n            id: \"Review\",\r\n            title: \"Review\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst V3 = () => {\r\n  const shiftPress = useKeyPress(\"Control\");\r\n  const [activeTab, setActiveTab] = useState(\"New Request\");\r\n  const [processes, setProcesses] = useState(initialProcesses);\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  const handleTaskActive = (processId, taskId) => {\r\n    const process = processes.find((proc) => proc.id === processId);\r\n    const processIndex = processes.indexOf(process);\r\n\r\n    const task = process.tasks.find((task) => task.id === taskId);\r\n    const taskIndex = process.tasks.indexOf(task);\r\n\r\n    const tasksCopy = [...process.tasks];\r\n    tasksCopy[taskIndex] = {\r\n      ...task,\r\n      active: !task.active,\r\n    };\r\n\r\n    const processesCopy = [...processes];\r\n    processesCopy[processIndex] = {\r\n      ...process,\r\n      tasks: tasksCopy,\r\n    };\r\n\r\n    setProcesses(processesCopy);\r\n  };\r\n\r\n  const handleProcessActive = (processId) => {\r\n    const process = processes.find((proc) => proc.id === processId);\r\n    const processIndex = processes.indexOf(process);\r\n    const processesCopy = [...processes];\r\n    processesCopy[processIndex] = {\r\n      ...process,\r\n      active: !process.active,\r\n    };\r\n    setProcesses(processesCopy);\r\n  };\r\n\r\n  const handleTaskAdd = (processId) => {\r\n    const process = processes.find((proc) => proc.id === processId);\r\n    const processIndex = processes.indexOf(process);\r\n    const processTasks = [\r\n      ...process.tasks,\r\n      { id: randomId(), title: \"New Task\" },\r\n    ];\r\n    const processesCopy = [...processes];\r\n    processesCopy[processIndex].tasks = processTasks;\r\n\r\n    setProcesses(processesCopy);\r\n    unselectAll();\r\n  };\r\n\r\n  const handleTaskRemove = (processId, taskId) => {\r\n    const process = processes.find((proc) => proc.id === processId);\r\n    const processIndex = processes.indexOf(process);\r\n    const tasksCopy = process.tasks.filter((task) => task.id !== taskId);\r\n    const processesCopy = [...processes];\r\n    processesCopy[processIndex].tasks = tasksCopy;\r\n\r\n    setProcesses(processesCopy);\r\n  };\r\n\r\n  const unselectAll = () => {\r\n    const processesCop = processes.map((proc) => {\r\n      return {\r\n        ...proc,\r\n        active: false,\r\n        tasks: proc.tasks.map((task) => {\r\n          return {\r\n            ...task,\r\n            active: false,\r\n          };\r\n        }),\r\n      };\r\n    });\r\n    setProcesses(processesCop);\r\n  };\r\n\r\n  const handleWrapperClick = (ev) => {\r\n    ev?.preventDefault();\r\n    if (ev.target.className?.includes(\"zoomable-area\")) {\r\n      unselectAll();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Nav tabs>\r\n        {tabs.map((tab) => {\r\n          return (\r\n            <NavItem key={tab}>\r\n              <NavLink key={tab} onClick={() => toggle(tab)}>\r\n                {tab}\r\n              </NavLink>\r\n            </NavItem>\r\n          );\r\n        })}\r\n      </Nav>\r\n      <TabContent activeTab={activeTab} style={{ margin: \"2rem\" }}>\r\n        <TabPane tabId=\"New Request\">\r\n          <Row style={{ height: \"100vh\" }} onClick={handleWrapperClick}>\r\n            <PanZoom\r\n              className=\"zoomable-area\"\r\n              style={{ height: \"100%\", width: \"100%\" }}\r\n              disableDoubleClickZoom\r\n              enableBoundingBox\r\n              boundaryRatioVertical={0.8}\r\n              boundaryRatioHorizontal={0.8}\r\n              autoCenter\r\n              noStateUpdate\r\n              preventPan={() => shiftPress}\r\n            >\r\n              <Processes\r\n                processes={processes}\r\n                onTaskActive={handleTaskActive}\r\n                onAddtask={handleTaskAdd}\r\n                onTaskRemove={handleTaskRemove}\r\n                onProcessActive={handleProcessActive}\r\n              />\r\n            </PanZoom>\r\n          </Row>\r\n        </TabPane>\r\n      </TabContent>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default V3;\r\n","import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Appv1 from \"./v1/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport Workspace from \"./v2/Workspace\";\r\nimport V3 from \"./v3/v3\";\r\n\r\nconst Root = () => {\r\n  const [version, setVersion] = useState(null);\r\n\r\n  if (version === null) {\r\n    return (\r\n      <>\r\n        <button onClick={() => setVersion(1)}>Version 1</button>\r\n        <button onClick={() => setVersion(2)}>Version 2</button>\r\n        <button onClick={() => setVersion(3)}>Version 3</button>\r\n        <button onClick={() => setVersion(4)}>Version 4</button>\r\n        <button onClick={() => setVersion(5)}>Version 5</button>\r\n        <button onClick={() => setVersion(10)}>Draggable stages</button>\r\n      </>\r\n    );\r\n  } else if (version === 1) {\r\n    return <Appv1 />;\r\n  } else if (version === 10) {\r\n    return <V3 />;\r\n  } else {\r\n    return <Workspace dataSet={version - 1} />;\r\n  }\r\n};\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Root />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}